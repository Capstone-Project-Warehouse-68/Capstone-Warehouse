import React, { useState, useEffect } from "react";
import {
  Input,
  Table,
  Select,
  Typography,
  Space,
  message,
} from "antd";
import { SearchOutlined, FilterOutlined } from "@ant-design/icons";
import dayjs from "dayjs";
import type {ProductItem} from "../../interfaces/Product";
import { GetProductsforShowlist } from "../../services/https/ShowProduct/index";
const { Title } = Typography;
const { Option } = Select;

const ProductList = () => {
  const [searchText, setSearchText] = useState("");
  const [company, setCompany] = useState<string | undefined>();
  const [dataSource, setDataSource] = useState<ProductItem[]>([]);

    const fetchLimitProducts = async () => {
    try {
      const response = await GetProductsforShowlist();
      console.log("Response from GetLimitQuantity:", response);
      if (
        response.data &&
        Array.isArray(response.data) &&
        response.data.length > 0
      ) {
        // Assuming response.data is an array of NotificationProduct
        setDataSource(response.data);
        console.log("Data fetched:", response.data);
      } else if (response && response.error) {
        message.error(response.error);
      } else {
        message.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ");
      }
    } catch (error) {
      message.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
      console.error(error);
    }
  };

    useEffect(() => {
      fetchLimitProducts();
    }, []);
  // const data = [
  //   {
  //     ID: 1,
  //     ProductCode: "PRD-001",
  //     ProductName: "‡∏ú‡πâ‡∏≤‡πÄ‡∏ö‡∏£‡∏Å‡∏´‡∏ô‡πâ‡∏≤",
  //     Quantity: 50,
  //     NameOfUnit: "‡∏ä‡∏¥‡πâ‡∏ô",
  //     SupplyProductCode: "SUP-A001",
  //     SupplyName: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó A",
  //     Shelf: "‡∏ä‡∏±‡πâ‡∏ô A1",
  //     Zone: "‡πÇ‡∏ã‡∏ô A",
  //     CreatedAt: "2025-07-30T12:47:44.5709295+07:00",
  //     Description: "‡∏ú‡πâ‡∏≤‡πÄ‡∏ö‡∏£‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô",
  //   },
  //   {
  //     ID: 2,
  //     ProductCode: "PRD-002",
  //     ProductName: "‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á",
  //     Quantity: 30,
  //     NameOfUnit: "‡∏•‡∏¥‡∏ï‡∏£",
  //     SupplyProductCode: "SUP-B002",
  //     SupplyName: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó B",
  //     Shelf: "‡∏ä‡∏±‡πâ‡∏ô B2",
  //     Zone: "‡πÇ‡∏ã‡∏ô B",
  //     CreatedAt: "2025-07-28T09:20:00.000+07:00",
  //     Description: "‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏ö‡∏ô‡∏ã‡∏¥‡∏ô‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô API SN",
  //   },
  //   {
  //     ID: 3,
  //     ProductCode: "PRD-003",
  //     ProductName: "‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏®",
  //     Quantity: 80,
  //     NameOfUnit: "‡∏ä‡∏¥‡πâ‡∏ô",
  //     SupplyProductCode: "SUP-C003",
  //     SupplyName: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó C",
  //     Shelf: "‡∏ä‡∏±‡πâ‡∏ô C3",
  //     Zone: "‡πÇ‡∏ã‡∏ô C",
  //     CreatedAt: "2025-07-25T15:05:00.000+07:00",
  //     Description: "‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ñ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô‡∏£‡∏∏‡πà‡∏ô‡∏õ‡∏µ 2020+",
  //   },
  // ];

  const filteredData = dataSource.filter(
    (item) =>
      item.ProductName.includes(searchText) &&
      (!company || item.SupplyName === company)
  );

  const columns = [
    {
      title: "‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      dataIndex: "ProductCode",
      key: "ProductCode",
    },
    {
      title: "‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      dataIndex: "ProductName",
      key: "ProductName",
    },
    {
      title: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
      dataIndex: "Quantity",
      key: "Quantity",
    },
    {
      title: "‡∏´‡∏ô‡πà‡∏ß‡∏¢",
      dataIndex: "NameOfUnit",
      key: "NameOfUnit",
    },
    {
      title: "‡∏£‡∏´‡∏±‡∏™‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏á",
      dataIndex: "SupplyProductCode",
      key: "SupplyProductCode",
    },
    {
      title: "‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ç‡∏≤‡∏¢‡∏™‡πà‡∏á",
      dataIndex: "SupplyName",
      key: "SupplyName",
    },
    {
      title: "‡πÇ‡∏ã‡∏ô‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      dataIndex: "Zone",
      key: "Zone",
    },
    {
      title: "‡∏ä‡∏±‡πâ‡∏ô‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      dataIndex: "Shelf",
      key: "Shelf",
    },
    {
      title: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
      dataIndex: "CreatedAt",
      key: "CreatedAt",
      render: (value: string) => dayjs(value).format("DD/MM/YYYY"),
    },
    {
      title: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î",
      dataIndex: "Description",
      key: "Description",
    },
  ];

  return (
    <div style={{ padding: 24, background: "#d3d3d3", minHeight: "100vh" }}>
      <Title level={4} style={{ background: "#1890ff", color: "white", padding: 8, borderRadius: 6, display: "inline-block" }}>
        üìã ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
      </Title>

      <Space style={{ margin: "16px 0", display: "flex", flexWrap: "wrap" }}>
        <Input
          placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
          prefix={<SearchOutlined />}
          value={searchText}
          onChange={(e) => setSearchText(e.target.value)}
          style={{ width: 200 }}
        />

        <Select
          placeholder="‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó"
          allowClear
          onChange={(value) => setCompany(value)}
          style={{ width: 160 }}
          suffixIcon={<FilterOutlined />}
        >
          <Option value="‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó A">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó A</Option>
          <Option value="‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó B">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó B</Option>
          <Option value="‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó C">‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó C</Option>
        </Select>
      </Space>

      <Table
        rowKey="ID"
        columns={columns}
        dataSource={filteredData}
        pagination={false}
        bordered
      />
    </div>
  );
};

export default ProductList;
