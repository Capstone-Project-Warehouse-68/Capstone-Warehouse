version: "3.9"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: project_capstone
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend_network

  model:
    build:
      context: ./Model
      dockerfile: Dockerfile
    container_name: model
    ports:
      - "8001:8001"
    depends_on:
      backend:
        condition: service_started
    environment:
      - MODEL_SA_JSON=/app/ServiceAcc/CapStoneKEY.json
    volumes:
      - ./Model/ServiceAcc:/app/ServiceAcc:ro
    networks:
      - backend_network

volumes:
  postgres_data:

networks:
  backend_network: